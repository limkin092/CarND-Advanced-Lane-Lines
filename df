Siehe 'git help <Befehl>', um mehr über einen spezifischen Unterbefehl zu lesen.

Hauptbefehle
   add                  Dateiinhalte zum Commit vormerken
   am                   eine Serie von Patches von einer Mailbox anwenden
   archive              Dateiarchiv von angegebenem Verzeichnis erstellen
   bisect               Binärsuche verwenden, um den Commit zu finden, der einen Fehler verursacht hat
   branch               Branches anzeigen, erstellen oder entfernen
   bundle               Objekte und Referenzen über ein Archiv verteilen
   checkout             Branches wechseln oder Dateien im Arbeitsverzeichnis wiederherstellen
   cherry-pick          Änderungen eines existierenden Commits anwenden
   citool               grafische Alternative zu git-commit
   clean                unversionierte Dateien vom Arbeitsverzeichnis entfernen
   clone                ein Repository in einem neuen Verzeichnis klonen
   commit               Änderungen in das Repository eintragen
   describe             einem Objekt einen für Menschen lesbaren Namen basierend auf
einer verfügbaren Referenz geben
   diff                 Änderungen zwischen Commits, Commit und Arbeitsverzeichnis, etc. anzeigen
   fetch                Objekte und Referenzen von einem anderen Repository herunterladen
   format-patch         Patches für E-Mail-Versand vorbereiten
   gc                   nicht benötigte Dateien entfernen und das lokale Repository optimieren
   gitk                 der Git-Repository-Browser
   grep                 Zeilen darstellen, die einem Muster entsprechen
   gui                  eine portable grafische Schnittstelle zu Git
   init                 ein leeres Git-Repository erstellen oder ein bestehendes neuinitialisieren
   log                  Commit-Historie anzeigen
   merge                zwei oder mehr Entwicklungszweige zusammenführen
   mv                   eine Datei, ein Verzeichnis, oder eine symbolische Verknüpfung verschieben oder umbenennen
   notes                Objekt-Notizen hinzufügen oder überprüfen
   pull                 Objekte von einem externen Repository anfordern und sie mit einem anderen Repository oder einem lokalen Branch zusammenführen
   push                 Remote-Referenzen mitsamt den verbundenen Objekten aktualisieren
   range-diff           zwei Commit-Bereiche vergleichen (zwei Versionen eines Branches)
   rebase               Wiederholtes Anwenden von Commits auf anderem Basis-Commit
   reset                aktuellen HEAD zu einem spezifizierten Zustand setzen
   revert               einige bestehende Commits rückgängig machen
   rm                   Dateien im Arbeitsverzeichnis und vom Index löschen
   shortlog             Ausgabe von 'git log' zusammenfassen
   show                 verschiedene Arten von Objekten anzeigen
   stash                Änderungen in einem Arbeitsverzeichnis aufbewahren
   status               den Zustand des Arbeitsverzeichnisses anzeigen
   submodule            Submodule initialisieren, aktualisieren oder inspizieren
   tag                  ein mit GPG signiertes Tag-Objekt erzeugen, auflisten, löschen oder verifizieren.
   worktree             mehrere Arbeitsverzeichnisse verwalten

Nebenbefehle / Manipulationen
   config               repositoryweite oder globale Optionen lesen oder setzen
   fast-export          Export Tool für Git Daten
   fast-import          Backend für schnelle Git Daten Import Tools
   filter-branch        Branches umschreiben
   mergetool            Ausführen von Tools zur Auflösung von Merge-Konflikten zur Behebung dieser
   pack-refs            Branches und Tags für effizienten Zugriff auf das Repository packen
   prune                alle nicht erreichbaren Objekte von der Objektdatenbank entfernen
   reflog               Reflog Informationen verwalten
   remote               Menge von hinterlegten Repositories verwalten
   repack               ungepackte Objekte in einem Repository packen
   replace              Referenzen für ersetzende Objekte erstellen, auflisten, löschen

Nebenbefehle / Abfragen
   annotate             Zeilen der Datei mit Commit-Informationen versehen und anzeigen
   blame                Anzeigen, durch welchen Commit und Autor die jeweiligen Zeilen
einer Datei zuletzt geändert wurden
   count-objects        Anzahl und Speicherverbrauch ungepackter Objekte zählen
   difftool             Änderungen mittels den allgemeinen Diff-Tools anzeigen
   fsck                 stellt die Verbundenheit und Gültigkeit der Objekte in der Datenbank sicher
   gitweb               Git Web Interface (Web-Frontend für Git-Repositories)
   help                 Hilfsinformationen über Git anzeigen
   instaweb             Ihr aktuelles Repository sofort in gitweb betrachten
   merge-tree           3-Wege-Merge anzeigen ohne den Index zu verändern
   rerere               aufgezeichnete Auflösung von Merge-Konflikten wiederverwenden
   show-branch          Branches und ihre Commits ausgeben
   verify-commit        die GPG-Signatur von Commits prüfen
   verify-tag           die GPG-Signatur von Tags prüfen
   whatchanged          Logs mit dem Unterschied, den jeder Commit einführt, anzeigen

mit anderen interagieren
   archimport           ein GNU Arch Repository in Git importieren
   cvsexportcommit      einzelnen Commit zu einem ausgecheckten CSV-Repository exportieren
   cvsimport            Ihre Daten aus einem anderen SCM übernehmen
   cvsserver            ein CSV Server Emulator für Git
   imap-send            eine Sammlung von Patches von der Standard-Eingabe zu einem IMAP-Ordner senden
   p4                   von Perforce Repositories importieren und nach diese senden
   quiltimport          Patches aus quilt auf aktuellen Branch anwenden
   request-pull         eine Übersicht über ausstehende Änderungen generieren
   send-email           eine Sammlung von Patches als E-Mails versenden
   svn                  Bidirektionale Operationen zwischen einem Subversion Repository und Git

Systembefehle / Manipulationen
   apply                einen Patch auf Dateien und/oder den Index anwenden
   checkout-index       Dateien von dem Index ins Arbeitsverzeichnis kopieren
   commit-graph         Git Commit-Graph-Dateien schreiben und überprüfen
   commit-tree          ein neues Commit-Objekt erstellen
   hash-object          von einer Datei die Objekt-ID berechnen und optional ein Blob erstellen
   index-pack           Pack-Index-Datei für ein existierendes gepacktes Archiv erzeugen
   merge-file           einen 3-Wege-Datei-Merge ausführen
   merge-index          einen Merge für zusammenzuführende Dateien ausführen
   mktag                ein Tag-Objekt erstellen
   mktree               Tree-Objekt aus ls-tree formattiertem Text erzeugen
   multi-pack-index     multi-pack-indexes schreiben und überprüfen
   pack-objects         ein gepacktes Archiv von Objekten erstellen
   prune-packed         zusätzliche Objekte, die sich bereits in Paketdateien befinden, entfernen
   read-tree            Verzeichnisinformationen in den Index einlesen
   symbolic-ref         symbolische Referenzen lesen, ändern und löschen
   unpack-objects       Objekte von einem gepackten Archiv entpacken
   update-index         Dateiinhalte aus dem Arbeitsverzeichnis im Index registrieren
   update-ref           den Objektnamen, der in einer Referenz gespeichert ist, sicher aktualisieren
   write-tree           Tree-Objekt vom aktuellen Index erstellen

Systembefehle / Abfragen
   cat-file             Inhalt oder Informationen zu Typ und Größe für Repository-Objekte bereitstellen
   cherry               Commits finden, die noch auf dem Upstream-Branch angewendet werden müssen
   diff-files           Dateien von dem Arbeitsverzeichnis und dem Index vergleichen
   diff-index           ein Verzeichnis von dem Arbeitsverzeichnis und dem Index vergleichen
   diff-tree            den Inhalt und Modus von Blobs aus zwei Verzeichnisobjekten vergleichen
   for-each-ref         Informationen für jede Referenz ausgeben
   get-tar-commit-id    Commit-ID eines Archivs extrahieren, welches mit git-archive erstellt wurde
   ls-files             Informationen über Dateien in dem Index und im Arbeitsverzeichnis anzeigen
   ls-remote            Referenzen in einem Remote-Repository auflisten
   ls-tree              Inhalte eines Tree-Objektes auflisten
   merge-base           möglichst besten gemeinsamen Vorgänger-Commit für einen Merge finden
   name-rev             symbolische Namen für die gegebenen Commits finden
   pack-redundant       redundante Paketdateien finden
   rev-list             Commit-Objekte in umgekehrter chronologischer Ordnung auflisten
   rev-parse            Parameter herauspicken und ändern
   show-index           gepackten Archiv-Index anzeigen
   show-ref             Referenzen in einem lokales Repository auflisten
   unpack-file          eine temporäre Datei mit den Inhalten eines Blobs erstellen
   var                  eine logische Variable von Git anzeigen
   verify-pack          gepackte Git-Archivdateien validieren

Systembefehle / Repositories synchronisieren
   daemon               ein wirklich einfacher Server für Git Repositories
   fetch-pack           fehlende Objekte von einem anderen Repository empfangen
   http-backend         serverseitige Implementierung von Git über HTTP
   send-pack            Objekte über das Git Protokoll zu einem anderen Repository übertragen
   update-server-info    Hilfsinformationsdatei zur Hilfe von einfachen Servern aktualisieren

Systembefehle / Interne Hilfsbefehle
   check-attr           gitattributes Informationen darstellen
   check-ignore         Fehlersuche in gitignore / exclude Dateien
   check-mailmap        Name und E-Mail-Adresse von Kontakten anzeigen
   check-ref-format     Sicherstellen, dass ein Referenzname wohlgeformt ist
   column               Daten in Spalten anzeigen
   credential           Zugangsdaten des Benutzers empfangen und speichern
   credential-cache     Hilfsprogramm zum temporären Speichern von Zugangsdaten im Hauptspeicher
   credential-store     Hilfsprogramm zum Speichern von Zugangsdaten auf der Festplatte
   fmt-merge-msg        Beschreibung eines Merge-Commits erzeugen
   interpret-trailers    strukturierte Informationen in Commit-Beschreibungen hinzufügen oder parsen
   mailinfo             Patch und Urheberschaft von einer einzelnen E-Mail-Nachricht extrahieren
   mailsplit            einfaches UNIX mbox Splitter-Programm
   merge-one-file       das Standard-Hilfsprogramm für die Verwendung mit git-merge-index
   patch-id             eindeutige ID für einen Patch berechnen
   sh-i18n              Git's i18n-Konfigurationscode für Shell-Skripte
   sh-setup             allgemeiner Git Shell-Skript Konfigurationscode
   stripspace           nicht erforderlichen Whitespace entfernen
